{"version":3,"sources":["../lib/ts/map/map.ts"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["import {batch, isMutable} from '../shared/ownership';\r\nimport {getDeep, setDeep, hasDeep} from '../shared/deep';\r\nimport {isDefined, isUndefined} from '../shared/functions';\r\nimport {Iterable, isIterable} from '../shared/common';\r\nimport {MapState, createState, cloneState} from './state';\r\n\r\nexport type MapCallback<K, V> = (map: PersistentMap<K, V>) => PersistentMap<K, V>|void;\r\nexport type UpdateCallback<V> = (value: V|undefined) => V;\r\n\r\nfunction createMap<K, V>(): PersistentMap<K, V> {\r\n  return new PersistentMap<K, V>(createState<K, V>());\r\n}\r\n\r\nexport class PersistentMap<K, V> implements Iterable<[K, V]> {\r\n  private static _empty = PersistentMap.create();\r\n\r\n  static create(create?: MapCallback<any, any>): PersistentMap<any, any>\r\n  static create<K, V>(create?: MapCallback<K, V>): PersistentMap<K, V>\r\n  static create<K, V>(create?: MapCallback<K, V>): PersistentMap<K, V> {\r\n    if(isUndefined(create)) {\r\n      return createMap<K, V>();\r\n    }\r\n    return batch<PersistentMap<K, V>>(owner => {\r\n      var map = createMap<K, V>();\r\n      return create(map) || map;\r\n    });\r\n  }\r\n\r\n  static empty(): PersistentMap<any, any>\r\n  static empty<K, V>(): PersistentMap<K, V>\r\n  static empty<K, V>(): PersistentMap<K, V> {\r\n    return batch.active ? PersistentMap.create() : PersistentMap._empty;\r\n  }\r\n\r\n  private _state: MapState<K, V>;\r\n\r\n  constructor(state: MapState<K, V>) {\r\n    this._state = state;\r\n  }\r\n\r\n  private prep(): PersistentMap<K, V> {\r\n    return isMutable(this._state.owner) ? this : this.clone();\r\n  }\r\n\r\n  get size() {\r\n    return this._state.values.size;\r\n  }\r\n\r\n  get mutable() {\r\n    return isMutable(this._state.owner);\r\n  }\r\n\r\n  batch(callback: MapCallback<K, V>): PersistentMap<K, V> {\r\n    batch.start();\r\n    var map = this.asMutable();\r\n    map = callback(map) || map;\r\n    if(batch.end()) {\r\n      map._state.owner = 0;\r\n    }\r\n    return map;\r\n  }\r\n\r\n  asMutable(): PersistentMap<K, V> {\r\n    return isMutable(this._state.owner) ? this : new PersistentMap<K, V>(cloneState<K, V>(this._state, true));\r\n  }\r\n\r\n  asImmutable(): PersistentMap<K, V> {\r\n    return isMutable(this._state.owner) ? new PersistentMap<K, V>(cloneState<K, V>(this._state, false)) : this;\r\n  }\r\n\r\n  update(key: K, callback: UpdateCallback<V>): PersistentMap<K, V> {\r\n    var oldv = this.get(key);\r\n    var newv = callback(oldv);\r\n    return newv === oldv ? this : this.set(key, newv);\r\n  }\r\n\r\n  clone(): PersistentMap<K, V> {\r\n    return new PersistentMap<K, V>(cloneState(this._state));\r\n  }\r\n\r\n  get(key: K): V|undefined {\r\n    return this._state.values.get(key);\r\n  }\r\n\r\n  getIn(path: any[]): any|undefined {\r\n    return getDeep(this._state, path);\r\n  }\r\n\r\n  set(key: K, value: V): PersistentMap<K, V> {\r\n    var map = this.prep();\r\n    map._state.values.set(key, value);\r\n    return map;\r\n  }\r\n\r\n  setIn(path: any[], value: any): PersistentMap<K, V> {\r\n    return new PersistentMap<K, V>(<MapState<K, V>>setDeep(this._state, path, 0, value));\r\n  }\r\n\r\n  has(key: K): boolean {\r\n    return this._state.values.has(key);\r\n  }\r\n\r\n  hasIn(path: any[]): boolean {\r\n    return hasDeep(this._state, path);\r\n  }\r\n\r\n  delete(key: K): PersistentMap<K, V> {\r\n    var map = this.prep();\r\n    map._state.values.delete(key);\r\n    return map;\r\n  }\r\n\r\n  keys(): IterableIterator<K> {\r\n    return this._state.values.keys();\r\n  }\r\n\r\n  values(): IterableIterator<V> {\r\n    return this._state.values.values();\r\n  }\r\n\r\n  entries(): IterableIterator<[K, V]> {\r\n    return this._state.values.entries();\r\n  }\r\n\r\n  [Symbol.iterator](): IterableIterator<[K, V]> {\r\n    return this._state.values[Symbol.iterator]();\r\n  }\r\n\r\n  private _serializing: any = void 0;\r\n  toJS(): {[key: string]: any} {\r\n    if(isDefined(this._serializing)) {\r\n      return this._serializing;\r\n    }\r\n    var obj: any = {};\r\n    this._serializing = obj;\r\n    for(var it = this.entries(), current = it.next(); !current.done; current = it.next()) {\r\n      var entry = current.value;\r\n      var value = entry[1];\r\n      obj[entry[0]] = isIterable<[K, V]>(value) ? value.toJS() : value;\r\n    }\r\n    this._serializing = void 0;\r\n    return obj;\r\n  }\r\n}"]}