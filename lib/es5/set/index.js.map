{"version":3,"sources":["../lib/ts/set/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["export {PersistentSet} from './set';\r\nexport {SetState} from './state';\r\n\r\nimport {batch, isMutable as ownerIsMutable} from '../shared/ownership';\r\nimport {isDefined} from '../shared/functions';\r\nimport {isIterable} from '../shared/common';\r\nimport {SetState, cloneState, emptyState, createState} from './state';\r\n\r\nexport type PSetCallback<T> = (set: SetState<T>) => SetState<T>|void;\r\n\r\nconst _empty = emptyState<any>();\r\n\r\nfunction prep<T>(set: SetState<T>): SetState<T> {\r\n  return ownerIsMutable(set.owner) ? set : cloneState(set);\r\n}\r\n\r\nexport function emptySet<T>(): SetState<T> {\r\n  return batch.active ? createState() : _empty;\r\n}\r\n\r\nexport function fromArray<T>(values: T[]): SetState<T> {\r\n  if(!Array.isArray(values)) {\r\n    throw new Error('First argument must be an array of values');\r\n  }\r\n  return createState<T>(values);\r\n}\r\n\r\nexport function getSize<T>(set: SetState<T>): number {\r\n  return set.values.size;\r\n}\r\n\r\nexport function isEmpty<T>(set: SetState<T>): boolean {\r\n  return set.values.size === 0;\r\n}\r\n\r\nexport function isMutable<T>(set: SetState<T>): boolean {\r\n  return ownerIsMutable(set.owner);\r\n}\r\n\r\nexport function updateSet<T>(callback: PSetCallback<T>, set: SetState<T>): SetState<T> {\r\n  batch.start();\r\n  set = asMutable(set);\r\n  set = callback(set) || set;\r\n  if(batch.end()) {\r\n    set.owner = 0;\r\n  }\r\n  return set;\r\n}\r\n\r\nexport function asMutable<T>(set: SetState<T>): SetState<T> {\r\n  return ownerIsMutable(set.owner) ? set : cloneState<T>(set, true);\r\n}\r\n\r\nexport function asImmutable<T>(set: SetState<T>): SetState<T> {\r\n  return ownerIsMutable(set.owner) ? cloneState<T>(set, false) : set;\r\n}\r\n\r\nexport function add<T>(value: T, set: SetState<T>): SetState<T> {\r\n  if(has(value, set)) return set;\r\n  set = prep(set);\r\n  if(isDefined(value)) {\r\n    set.values.add(value);\r\n  }\r\n  else {\r\n    set.values.delete(value);\r\n  }\r\n  return set;\r\n}\r\n\r\nexport function has<T>(value: T, set: SetState<T>): boolean {\r\n  return set.values.has(value);\r\n}\r\n\r\nexport function remove<T>(value: T, set: SetState<T>): SetState<T> {\r\n  if(!has(value, set)) return set;\r\n  set = prep(set);\r\n  set.values.delete(value);\r\n  return set;\r\n}\r\n\r\nexport function values<T>(set: SetState<T>): IterableIterator<T> {\r\n  return set.values.values();\r\n}\r\n\r\nexport function toIterable<T>(set: SetState<T>): IterableIterator<T> {\r\n  return set.values[Symbol.iterator]();\r\n}\r\n\r\nvar _serializing: any = void 0;\r\nexport function toJS<T>(set: SetState<T>): {[key: string]: any} {\r\n  if(isDefined(_serializing)) {\r\n    return _serializing;\r\n  }\r\n  var obj: any = {};\r\n  _serializing = obj;\r\n  for(var it = set.values.entries(), current = it.next(); !current.done; current = it.next()) {\r\n    var entry = current.value;\r\n    var value = entry[1];\r\n    obj[entry[0]] = isIterable<T>(value) ? value.toJS() : value;\r\n  }\r\n  _serializing = void 0;\r\n  return obj;\r\n}\r\n"]}