{"version":3,"sources":["../lib/ts/shared/array.ts"],"names":[],"mappings":"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","file":"array.js","sourcesContent":["export function copyArray<T>(values: T[]): T[] {\r\n  if(values.length > 7) {\r\n    var arr = new Array(values.length);\r\n    for(var i = 0; i < values.length; i++) {\r\n      arr[i] = values[i];\r\n    }\r\n    return arr;\r\n  }\r\n  switch(values.length) {\r\n    case 0: return [];\r\n    case 1:  return [values[0]];\r\n    case 2:  return [values[0], values[1]];\r\n    case 3:  return [values[0], values[1], values[2]];\r\n    case 4:  return [values[0], values[1], values[2], values[3]];\r\n    case 5:  return [values[0], values[1], values[2], values[3], values[4]];\r\n    case 6:  return [values[0], values[1], values[2], values[3], values[4], values[5]];\r\n    case 7:  return [values[0], values[1], values[2], values[3], values[4], values[5], values[6]];\r\n    default: return values.slice(); // never reached, but seems to trigger optimization in V8 for some reason\r\n  }\r\n}\r\n\r\nexport function concatToNewArray<T>(left: T[], right: T[], spaceBetween: number): T[] {\r\n  var arr = new Array(left.length + right.length + spaceBetween);\r\n  for(var i = 0; i < left.length; i++) {\r\n    arr[i] = left[i];\r\n  }\r\n  i += spaceBetween;\r\n  for(var j = 0; j < right.length; i++, j++) {\r\n    arr[i] = right[j];\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function blockCopy<T>(sourceValues: T[], targetValues: T[], sourceIndex: number, targetIndex: number, count: number): void {\r\n  if(sourceValues === targetValues && sourceIndex < targetIndex) {\r\n    for(var i = sourceIndex + count - 1, j = targetIndex + count - 1, c = 0; c < count; i--, j--, c++) {\r\n      targetValues[j] = sourceValues[i];\r\n    }\r\n  }\r\n  else {\r\n    for(var i = sourceIndex, j = targetIndex, c = 0; c < count; i++, j++, c++) {\r\n      targetValues[j] = sourceValues[i];\r\n    }\r\n  }\r\n}\r\n\r\nexport function truncateLeft<T>(values: T[], start: number): T[] {\r\n  var array = new Array<T>(values.length - start);\r\n  for(var i = 0, j = start; j < values.length; i++, j++) {\r\n    array[i] = values[j];\r\n  }\r\n  return array;\r\n}"]}