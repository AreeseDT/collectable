{"version":3,"sources":["../lib/ts/list/list.ts"],"names":[],"mappings":"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","file":"list.js","sourcesContent":["import {batch, isMutable} from '../shared/ownership';\nimport {getDeep, setDeep, hasDeep} from '../shared/deep';\nimport {createArray, createIterator} from './values';\nimport {getAtOrdinal} from './traversal';\nimport {ListState, emptyState, ensureImmutable, ensureMutable} from './state';\nimport {Iterable} from '../shared/common';\nimport * as List from './index';\n\nexport type ListMutationCallback<T> = (list: PersistentList<T>) => void;\nexport type UpdateCallback<T> = (value: T|undefined) => T;\n\nexport class PersistentList<T> implements Iterable<T> {\n  static empty<T>(): PersistentList<T> {\n    return _emptyList;\n  }\n\n  static fromArray<T>(values: T[]): PersistentList<T> {\n    return new PersistentList<T>(List.fromArray(values));\n  }\n\n  constructor(public _state: ListState<T>) {\n  }\n\n  get size(): number {\n    return this._state.size;\n  }\n\n  get mutable() {\n    return isMutable(this._state.owner);\n  }\n\n  hasIndex(index: number): boolean {\n    return List.hasIndex(index, this._state);\n  }\n\n  hasIn(path: any[]): boolean {\n    return hasDeep(this._state, path);\n  }\n\n  batch(callback: ListMutationCallback<T>): PersistentList<T> {\n    batch.start();\n    var list = this.asMutable();\n    callback(list);\n    if(batch.end()) {\n      list._state.owner = 0;\n    }\n    return list;\n  }\n\n  asMutable(): PersistentList<T> {\n    return isMutable(this._state.owner) ? this : new PersistentList<T>(ensureMutable(this._state));\n  }\n\n  asImmutable(): PersistentList<T> {\n    return isMutable(this._state.owner) ? new PersistentList<T>(ensureImmutable(this._state, false)) : this;\n  }\n\n  freeze(): PersistentList<T> {\n    return isMutable(this._state.owner)\n      ? (ensureImmutable(this._state, true), this)\n      : this;\n  }\n\n  thaw(): PersistentList<T> {\n    if(!isMutable(this._state.owner)) {\n      this._state.owner = -1;\n    }\n    return this;\n  }\n\n  update(index: number, callback: UpdateCallback<T>): PersistentList<T> {\n    var state = List.updateIndex(index, callback, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  get(index: number): T|undefined {\n    return getAtOrdinal(this._state, index);\n  }\n\n  getIn(path: any[]): any|undefined {\n    return getDeep(this._state, path);\n  }\n\n  set(index: number, value: T): PersistentList<T> {\n    var state = List.set(index, value, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  setIn(path: any[], value: any): PersistentList<T> {\n    var state = setDeep(this._state, path, 0, value);\n    return state === this._state ? this : new PersistentList<T>(<ListState<T>>state);\n  }\n\n  append(...values: T[]): PersistentList<T>\n  append(): PersistentList<T> {\n    if(arguments.length === 0) return this;\n    var state = arguments.length === 1\n      ? List.append(arguments[0], this._state)\n      : List.appendArray(Array.from(arguments), this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  appendArray(values: T[]): PersistentList<T> {\n    var state = List.appendArray(values, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  prepend(...values: T[]): PersistentList<T>\n  prepend(): PersistentList<T> {\n    if(arguments.length === 0) return this;\n    var state = arguments.length === 1\n      ? List.prepend(arguments[0], this._state)\n      : List.prependArray(Array.from(arguments), this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  prependArray(values: T[]): PersistentList<T> {\n    var state = List.prependArray(values, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  insert(index: number, ...values: T[]): PersistentList<T>\n  insert(index: number): PersistentList<T> {\n    if(arguments.length <= 1) return this;\n    var values = new Array<T>(arguments.length - 1);\n    for(var i = 1; i < arguments.length; i++) {\n      values[i - 1] = arguments[i];\n    }\n    var state = List.insertArray(index, values, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  insertArray(index: number, values: T[]): PersistentList<T> {\n    if(values.length === 0) return this;\n    var state = List.insertArray(index, values, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  delete(index: number): PersistentList<T> {\n    var state = List.remove(index, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  deleteRange(start: number, end: number): PersistentList<T> {\n    var state = List.removeRange(start, end, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  pop(): PersistentList<T> {\n    var state = List.pop(this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  popFront(): PersistentList<T> {\n    var state = List.popFront(this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  skip(count: number): PersistentList<T> {\n    var state = List.skip(count, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  take(count: number): PersistentList<T> {\n    var state = List.take(count, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  slice(start: number, end = 0): PersistentList<T> {\n    var state = List.slice(start, end, this._state);\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  concat(...lists: PersistentList<T>[]): PersistentList<T>\n  concat(list: PersistentList<T>): PersistentList<T> {\n    if(arguments.length === 0) return this;\n    var state = arguments.length === 1\n      ? List.concat(this._state, list._state)\n      : List.concatMany([this._state].concat(Array.from<PersistentList<T>>(arguments).map(arg => arg._state)));\n    return state === this._state ? this : new PersistentList<T>(state);\n  }\n\n  toArray(): T[] {\n    return createArray(this._state);\n  }\n\n  [Symbol.iterator](): IterableIterator<T|undefined> {\n    return createIterator(this._state);\n  }\n\n  values(): IterableIterator<T|undefined> {\n    return createIterator(this._state);\n  }\n\n  toJS(): T[] {\n    return this.toArray();\n  }\n}\n\nexport function isDefaultEmptyList(list: PersistentList<any>): boolean {\n  return list === _emptyList;\n}\n\nexport var _emptyList = new PersistentList<any>(emptyState<any>(false));\n"]}