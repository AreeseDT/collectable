export { PersistentMap } from './map';
export { MapState } from './state';
import { MapState } from './state';
export declare type PMapCallback<K, V> = (map: MapState<K, V>) => MapState<K, V> | void;
export declare type UpdateCallback<V> = (value: V | undefined) => V | undefined;
export declare function emptyMap<K, V>(): MapState<K, V>;
export declare function isMap<K, V>(collection: Object): collection is MapState<K, V>;
export declare function isEmpty<K, V>(map: MapState<K, V>): boolean;
export declare function isEqual<K, V>(a: MapState<K, V>, b: MapState<K, V>): boolean;
export declare function getSize<K, V>(map: MapState<K, V>): number;
export declare function isMutable<K, V>(map: MapState<K, V>): boolean;
export declare function updateMap<K, V>(callback: PMapCallback<K, V>, map: MapState<K, V>): MapState<K, V>;
export declare function asMutable<K, V>(map: MapState<K, V>): MapState<K, V>;
export declare function asImmutable<K, V>(map: MapState<K, V>): MapState<K, V>;
export declare function update<K, V>(key: K, callback: UpdateCallback<V>, map: MapState<K, V>): MapState<K, V>;
export declare function get<K, V>(key: K, map: MapState<K, V>): V | undefined;
export declare function getIn<K, V>(path: any[], map: MapState<K, V>): V | undefined;
export declare function set<K, V>(key: K, value: V, map: MapState<K, V>): MapState<K, V>;
export { set as assoc };
export declare function setIn<K, V>(path: any[], value: any, map: MapState<K, V>): MapState<K, V>;
export declare function has<K, V>(key: K, map: MapState<K, V>): boolean;
export declare function hasIn<K, V>(path: any[], map: MapState<K, V>): boolean;
export declare function remove<K, V>(key: K, map: MapState<K, V>): MapState<K, V>;
export declare function keys<K, V>(map: MapState<K, V>): IterableIterator<K>;
export declare function values<K, V>(map: MapState<K, V>): IterableIterator<V>;
export declare function entries<K, V>(map: MapState<K, V>): IterableIterator<[K, V]>;
export declare function toIterable<K, V>(map: MapState<K, V>): IterableIterator<[K, V]>;
export declare function toJS<K, V>(map: MapState<K, V>): {
    [key: string]: any;
};
