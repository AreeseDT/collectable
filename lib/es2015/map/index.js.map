{"version":3,"sources":["../lib/ts/map/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["export {PersistentMap} from './map';\r\nexport {MapState} from './state';\r\n\r\nimport {batch, isMutable as ownerIsMutable} from '../shared/ownership';\r\nimport {getDeep, setDeep, hasDeep} from '../shared/deep';\r\nimport {isDefined} from '../shared/functions';\r\nimport {isIterable} from '../shared/common';\r\nimport {MapState, cloneState, emptyState, createState} from './state';\r\n\r\nexport type PMapCallback<K, V> = (map: MapState<K, V>) => MapState<K, V>|void;\r\nexport type UpdateCallback<V> = (value: V|undefined) => V|undefined;\r\n\r\nconst _empty = emptyState<any, any>();\r\n\r\nfunction prep<K, V>(map: MapState<K, V>): MapState<K, V> {\r\n  return ownerIsMutable(map.owner) ? map : cloneState(map);\r\n}\r\n\r\nexport function emptyMap<K, V>(): MapState<K, V> {\r\n  return batch.active ? createState() : _empty;\r\n}\r\n\r\nexport function isMap<K, V>(collection: Object): collection is MapState<K, V> {\r\n  return collection instanceof MapState;\r\n}\r\n\r\nexport function isEmpty<K, V>(map: MapState<K, V>): boolean {\r\n  return map.values.size === 0;\r\n}\r\n\r\nexport function isEqual<K, V>(a: MapState<K, V>, b: MapState<K, V>): boolean {\r\n  if(a === b) return true;\r\n  if(getSize(a) !== getSize(b)) return false;\r\n  var bvalues = b.values;\r\n  var it = a.values.entries();\r\n  for(var current = it.next(); !current.done; current = it.next()) {\r\n    var entry = current.value;\r\n    if(!bvalues.has(entry[0])) return false;\r\n    if(entry[1] !== bvalues.get(entry[0])) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function getSize<K, V>(map: MapState<K, V>): number {\r\n  return map.values.size;\r\n}\r\n\r\nexport function isMutable<K, V>(map: MapState<K, V>): boolean {\r\n  return ownerIsMutable(map.owner);\r\n}\r\n\r\nexport function updateMap<K, V>(callback: PMapCallback<K, V>, map: MapState<K, V>): MapState<K, V> {\r\n  batch.start();\r\n  map = asMutable(map);\r\n  map = callback(map) || map;\r\n  if(batch.end()) {\r\n    map.owner = 0;\r\n  }\r\n  return map;\r\n}\r\n\r\nexport function asMutable<K, V>(map: MapState<K, V>): MapState<K, V> {\r\n  return ownerIsMutable(map.owner) ? map : cloneState<K, V>(map, true);\r\n}\r\n\r\nexport function asImmutable<K, V>(map: MapState<K, V>): MapState<K, V> {\r\n  return ownerIsMutable(map.owner) ? cloneState<K, V>(map, false) : map;\r\n}\r\n\r\nexport function update<K, V>(key: K, callback: UpdateCallback<V>, map: MapState<K, V>): MapState<K, V> {\r\n  var oldv = get(key, map);\r\n  var newv = callback(oldv);\r\n  return newv === oldv ? map\r\n       : newv === void 0 ? remove(key, map)\r\n       : set(key, newv, map);\r\n}\r\n\r\nexport function get<K, V>(key: K, map: MapState<K, V>): V|undefined {\r\n  return map.values.get(key);\r\n}\r\n\r\nexport function getIn<K, V>(path: any[], map: MapState<K, V>): V|undefined {\r\n  return getDeep(map, path);\r\n}\r\n\r\nexport function set<K, V>(key: K, value: V, map: MapState<K, V>): MapState<K, V> {\r\n  if(get(key, map) === value) return map;\r\n  map = prep(map);\r\n  if(isDefined(value)) {\r\n    map.values.set(key, value);\r\n  }\r\n  else {\r\n    map.values.delete(key);\r\n  }\r\n  return map;\r\n}\r\nexport {set as assoc};\r\n\r\nexport function setIn<K, V>(path: any[], value: any, map: MapState<K, V>): MapState<K, V> {\r\n  return <MapState<K, V>>setDeep(map, path, 0, value);\r\n}\r\n\r\nexport function has<K, V>(key: K, map: MapState<K, V>): boolean {\r\n  return map.values.has(key);\r\n}\r\n\r\nexport function hasIn<K, V>(path: any[], map: MapState<K, V>): boolean {\r\n  return hasDeep(map, path);\r\n}\r\n\r\nexport function remove<K, V>(key: K, map: MapState<K, V>): MapState<K, V> {\r\n  if(!has(key, map)) return map;\r\n  map = prep(map);\r\n  map.values.delete(key);\r\n  return map;\r\n}\r\n\r\nexport function keys<K, V>(map: MapState<K, V>): IterableIterator<K> {\r\n  return map.values.keys();\r\n}\r\n\r\nexport function values<K, V>(map: MapState<K, V>): IterableIterator<V> {\r\n  return map.values.values();\r\n}\r\n\r\nexport function entries<K, V>(map: MapState<K, V>): IterableIterator<[K, V]> {\r\n  return map.values.entries();\r\n}\r\n\r\nexport function toIterable<K, V>(map: MapState<K, V>): IterableIterator<[K, V]> {\r\n  return map.values[Symbol.iterator]();\r\n}\r\n\r\nvar _serializing: any = void 0;\r\nexport function toJS<K, V>(map: MapState<K, V>): {[key: string]: any} {\r\n  if(isDefined(_serializing)) {\r\n    return _serializing;\r\n  }\r\n  var obj: any = {};\r\n  _serializing = obj;\r\n  for(var it = map.values.entries(), current = it.next(); !current.done; current = it.next()) {\r\n    var entry = current.value;\r\n    var value = entry[1];\r\n    obj[entry[0]] = isIterable<[K, V]>(value) ? value.toJS() : value;\r\n  }\r\n  _serializing = void 0;\r\n  return obj;\r\n}\r\n"]}