{"version":3,"sources":["../lib/ts/set/state.ts"],"names":[],"mappings":";AAAA,mDAAkD;AAClD,mDAA8C;AAE9C;IACE,YACS,MAAc,EACd,KAAa,EACb,KAAa;QAFb,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;IACnB,CAAC;CACL;AAND,4BAMC;AAED,oBAA8B,KAAkB,EAAE,OAAO,GAAG,KAAK;IAC/D,MAAM,CAAC;QACL,MAAM,EAAE,IAAI,GAAG,CAAI,KAAK,CAAC,MAAM,CAAC;QAChC,KAAK,EAAE,OAAO,GAAG,iBAAK,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC;QACtC,KAAK,EAAE,kBAAM,EAAE;KAChB,CAAC;AACJ,CAAC;AAND,gCAMC;AAED,qBAA+B,MAAwB;IACrD,MAAM,CAAC,IAAI,QAAQ,CACjB,qBAAS,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAI,MAAM,CAAC,GAAG,IAAI,GAAG,EAAK,EACrD,kBAAM,EAAE,EACR,iBAAK,CAAC,KAAK,CACZ,CAAC;AACJ,CAAC;AAND,kCAMC;AAED;IACE,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAFD,gCAEC;AAED,MAAM,MAAM,GAAG,WAAW,EAAO,CAAC","file":"state.js","sourcesContent":["import {nextId, batch} from '../shared/ownership';\r\nimport {isDefined} from '../shared/functions';\r\n\r\nexport class SetState<T> {\r\n  constructor(\r\n    public values: Set<T>,\r\n    public owner: number,\r\n    public group: number\r\n  ) {}\r\n}\r\n\r\nexport function cloneState<T>(state: SetState<T>, mutable = false): SetState<T> {\r\n  return {\r\n    values: new Set<T>(state.values),\r\n    owner: mutable ? batch.owner || -1 : 0,\r\n    group: nextId()\r\n  };\r\n}\r\n\r\nexport function createState<T>(values?: T[]|Iterable<T>): SetState<T> {\r\n  return new SetState<T>(\r\n    isDefined(values) ? new Set<T>(values) : new Set<T>(),\r\n    nextId(),\r\n    batch.owner\r\n  );\r\n}\r\n\r\nexport function emptyState<T>(): SetState<T> {\r\n  return _empty;\r\n}\r\n\r\nconst _empty = createState<any>();"]}