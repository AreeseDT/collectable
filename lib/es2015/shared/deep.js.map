{"version":3,"sources":["../lib/ts/shared/deep.ts"],"names":[],"mappings":"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","file":"deep.js","sourcesContent":["import {isDefined, isUndefined} from './functions';\r\nimport {ListState, getSize as getListSize, toIterable as toListIterable, get as getAt, hasIndex, set as setAt} from '../list';\r\nimport {MapState, emptyMap, getSize as getMapSize, toIterable as toMapIterable, get as mapGet, has as mapHas, set} from '../map';\r\nimport {SetState, getSize as getSetSize, toIterable as toSetIterable, has as setHas} from '../set';\r\nimport {CollectionState, DeepCollectionState} from '../index';\r\n\r\nfunction isList<T>(arg: CollectionState): arg is ListState<T> {\r\n  return arg instanceof ListState;\r\n}\r\n\r\nfunction isMap<K, V>(arg: CollectionState): arg is MapState<K, V> {\r\n  return arg instanceof MapState;\r\n}\r\n\r\nfunction isSet<T>(arg: CollectionState): arg is SetState<T> {\r\n  return arg instanceof SetState;\r\n}\r\n\r\nfunction isCollectionType(arg: any): arg is CollectionState {\r\n  if(!arg || typeof arg !== 'object') return false;\r\n  return isList(arg) || isMap(arg) || isSet(arg);\r\n}\r\n\r\nfunction isDeepCollectionType(arg: any): arg is DeepCollectionState {\r\n  if(!arg || typeof arg !== 'object') return false;\r\n  return isList(arg) || isMap(arg);\r\n}\r\n\r\nfunction ensureNumericIndex(arg: any): number {\r\n  if(typeof arg !== 'number') {\r\n    throw new Error('List can only be indexed using a numeric value');\r\n  }\r\n  return arg;\r\n}\r\n\r\nexport function isEqual(a: any, b: any) {\r\n  if(a === b) return true;\r\n  if(!a || typeof a !== 'object') return false;\r\n  if(isList(a)) {\r\n    if(!isList(b)) return false;\r\n    return isListEqual(a, b);\r\n  }\r\n  if(isMap(a)) {\r\n    if(!isMap(b)) return false;\r\n    return isMapEqual(a, b);\r\n  }\r\n  if(isSet(a)) {\r\n    if(!isSet(b)) return false;\r\n    return isSetEqual(a, b);\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isListEqual(a: ListState<any>, b: ListState<any>): boolean {\r\n  if(getListSize(a) !== getListSize(b)) return false;\r\n  var it = toListIterable(a);\r\n  for(var current = it.next(); !current.done; current = it.next()) {\r\n    var entry = current.value;\r\n    if(!isEqual(entry[1], getAt(entry[0], b))) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction isMapEqual(a: MapState<any, any>, b: MapState<any, any>): boolean {\r\n  if(getMapSize(a) !== getMapSize(b)) return false;\r\n  var it = toMapIterable(a);\r\n  for(var current = it.next(); !current.done; current = it.next()) {\r\n    var entry = current.value;\r\n    if(!mapHas(entry[0], b)) return false;\r\n    if(!isEqual(entry[1], mapGet(entry[0], b))) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction isSetEqual(a: SetState<any>, b: SetState<any>): boolean {\r\n  if(getSetSize(a) !== getSetSize(b)) return false;\r\n  var it = toSetIterable(a);\r\n  for(var current = it.next(); !current.done; current = it.next()) {\r\n    if(!setHas(current.value, b)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function getDeep(collection: DeepCollectionState, path: any[]): any {\r\n  var i = 0, value: any = collection;\r\n  while(value !== void 0 && i < path.length) {\r\n    if(isDeepCollectionType(value)) {\r\n      if(isMap(value)) {\r\n        value = mapGet(path[i], value);\r\n      }\r\n      else if(isList(value)) {\r\n        if(typeof path[i] === 'number') {\r\n          value = getAt(path[i], value);\r\n        }\r\n        else {\r\n          value = void 0;\r\n        }\r\n      }\r\n      i++;\r\n    }\r\n    else {\r\n      value = void 0;\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function hasDeep(collection: DeepCollectionState, path: any[]): boolean {\r\n  var i = 0, value: any = collection;\r\n  while(i < path.length && value !== void 0) {\r\n    if(isCollectionType(value)) {\r\n      if(isMap(value)) {\r\n        value = mapGet(path[i], value);\r\n      }\r\n      else if(isList(value)) {\r\n        var index = path[i];\r\n        if(typeof index !== 'number' || !hasIndex(index, value)) {\r\n          return false;\r\n        }\r\n        value = getAt(path[i], value);\r\n      }\r\n      else {\r\n        if(i === path.length - 1) {\r\n          if(value === path[i]) {\r\n            return true;\r\n          }\r\n          if(isSet(value)) {\r\n            return setHas(path[i], value);\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n      if(isUndefined(value)) {\r\n        return false;\r\n      }\r\n      i++;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  return isDefined(value);\r\n}\r\nexport function setDeep(collection: any, path: any[], keyidx: number, value: any): DeepCollectionState {\r\n  var key = path[keyidx], value: any = collection;\r\n  if(keyidx === path.length - 1) {\r\n    if(isDefined(collection)) {\r\n      if(isMap(collection)) return set(key, value, collection);\r\n      if(isList(collection)) return setAt(ensureNumericIndex(key), value, collection);\r\n    }\r\n    return set(key, value, emptyMap());\r\n  }\r\n  if(isDefined(collection)) {\r\n    if(isMap(collection)) {\r\n      return set(key, setDeep(mapGet(key, collection), path, keyidx + 1, value), collection);\r\n    }\r\n    if(isList(collection)) {\r\n      var index = ensureNumericIndex(key);\r\n      return setAt(index, setDeep(getAt(index, collection), path, index + 1, value), collection);\r\n    }\r\n  }\r\n  return set(key, setDeep(void 0, path, keyidx + 1, value), emptyMap());\r\n}"]}